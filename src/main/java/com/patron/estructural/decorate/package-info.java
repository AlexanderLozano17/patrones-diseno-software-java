package com.patron.estructural.decorate;
/**
 * üé® Decorator Pattern 
 * ‚Äì Concepto Problema que resuelve: A√±adir funcionalidades
 * sin alterar la clase base o crear m√∫ltiples subclases.
 * 
 * Soluci√≥n: Usa objetos decoradores que "envuelven" al objeto original,
 * implementando la misma interfaz.
 * 
 * Aplicable cuando:
 * 
 * Quieres extender comportamiento de objetos sin modificar c√≥digo existente.
 * 
 * Necesitas combinar funcionalidades en tiempo de ejecuci√≥n.
 * 
 * ‚úÖ Ventajas 
 * Agrega comportamiento de forma flexible (en tiempo de ejecuci√≥n).
 * 
 * Evita la explosi√≥n de subclases.
 * 
 * Respeta el principio Open/Closed.
 * 
 * ‚ö†Ô∏è Desventajas 
 * Puede ser complejo con muchos decoradores anidados.
 * 
 * Dif√≠cil depurar si hay muchos niveles de envoltura.
 */
