package com.patron.estructural.bridge.enemy;
/**
 * El patr√≥n Bridge es un patr√≥n de dise√±o estructural que separa una
 * abstracci√≥n de su implementaci√≥n, permitiendo que ambas evolucionen de forma
 * independiente. Es especialmente √∫til cuando tienes jerarqu√≠as paralelas de
 * clases que pueden crecer de manera combinatoria si no se desacoplan.
 *
 *
 *üß© Bridge Pattern ‚Äì Concepto
 * Problema que resuelve: Evita la explosi√≥n de subclases al separar la
 * abstracci√≥n de la implementaci√≥n.
 * 
 * Soluci√≥n: Extrae la implementaci√≥n a una interfaz separada, y luego hace que
 * la abstracci√≥n la use por composici√≥n.
 * 
 * Aplicable cuando:
 * 
 * Quieres separar interfaces de plataformas concretas.
 * 
 * Deseas cambiar implementaciones en tiempo de ejecuci√≥n sin modificar la
 * abstracci√≥n.
 * 
 * Tienes m√∫ltiples dimensiones de cambio (por ejemplo: Forma y Color).
 *
 * ‚úÖ Ventajas
 * Separaci√≥n clara de responsabilidades.
 * 
 * Se puede extender la abstracci√≥n y la implementaci√≥n de forma independiente.
 * 
 * Favorece la composici√≥n sobre la herencia.
 * 
 * ‚ö†Ô∏è Desventajas
 * Introduce m√°s clases e interfaces.
 * 
 * Puede ser innecesario si el sistema es simple.
 */
