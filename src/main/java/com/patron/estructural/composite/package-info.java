package com.patron.estructural.composite;
/**
 * üå≥ Composite Pattern 
 * ‚Äì Concepto Problema que resuelve: Permite tratar objetos
 * individuales y grupos de objetos de la misma forma.
 * 
 * Soluci√≥n: Define una interfaz com√∫n para todos los objetos de una jerarqu√≠a,
 * tanto simples (hojas) como compuestos (contenedores).
 * 
 * Aplicable cuando:
 * 
 * Tienes una estructura jer√°rquica (como √°rboles).
 * 
 * Quieres que los clientes no distingan entre objetos individuales y
 * compuestos.
 * 
 * ‚úÖ Ventajas 
 * Facilita el trabajo con estructuras jer√°rquicas (como √°rboles).
 * 
 * Simplifica el c√≥digo del cliente (no necesita distinguir entre hoja y
 * compuesto).
 * 
 * Fomenta el principio de Open/Closed.
 * 
 * ‚ö†Ô∏è Desventajas 
 * Puede ser m√°s complejo si no necesitas estructura jer√°rquica.
 * 
 * A veces cuesta limitar ciertas operaciones solo a hojas o a compuestos.
 */
